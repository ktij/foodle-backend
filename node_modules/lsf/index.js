#!/usr/bin/env node

var fs = require('fs');
var commander = require('commander');

commander.version('1.0.4').option('-i, --input <string>', 'input a directory path, default ./').option('-o, --output <string>', 'input a file path to save the output').option('-d, --deep <integer>', 'input a recursion deep, default 1');
commander.parse(process.argv);

var path = commander.input || './';
var output = commander.output;
var deep = commander.deep || 1;


var dataArr = [];
traverse(dataArr, deep, path);
var data = dataArr.join('\r\n');

console.log(data);

if (output) {
    fs.writeFileSync(output, data);
}

function traverse(dataArr, maxDeep, parent, child, curDeep) {
    dataArr = dataArr || [];
    maxDeep = maxDeep || 1;
    curDeep = curDeep || 0;
    parent = parent || './';
    child = child || '';

    var path = parent + child;

    if (!fs.existsSync(path)) return;

    var preSpace = makePreSpace(curDeep);


    if (fs.statSync(path).isDirectory()) {
        dataArr.push(preSpace + '|-- ' + (child || parent) + ' (dir)');
        var dir = fs.readdirSync(path);
        dir.forEach(function (child) {
            if (curDeep >= maxDeep) return;
            traverse(dataArr, maxDeep, path + '/', child, curDeep + 1);
        });
    } else {
        dataArr.push(preSpace + '|-- ' + child);
    }

}

function makePreSpace(deep) {
    var preSpaceArr = [];
    for (var i = 0; i < deep; i++) {
        preSpaceArr.push('  ');
    }
    return preSpaceArr.join('');
}


